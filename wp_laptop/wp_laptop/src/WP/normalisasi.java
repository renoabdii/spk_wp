/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package WP;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author LENOVO
 */
public class normalisasi extends javax.swing.JFrame {

    /**
     * Creates new form normalisasi
     */
    public normalisasi() {
        initComponents();
        txtbobot.setEnabled(false);
        totalbobot();
        normalisasibobot();    
        Vektor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnkembali = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtbobot = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblnormalisasi = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblvektorS = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnkembali.setText("Kembali");
        btnkembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnkembaliActionPerformed(evt);
            }
        });

        jLabel1.setText("Bobot");

        txtbobot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtbobotActionPerformed(evt);
            }
        });

        tblnormalisasi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblnormalisasi);

        tblvektorS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblvektorS);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("NORMALISASI");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("VEKTOR S");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 424, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnkembali)
                            .addComponent(jLabel2)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGap(0, 45, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtbobot, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnkembali)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtbobot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void Vektor() {
    try {
        // String SQL untuk mengambil dan menormalisasi bobot
        String sqlQuery = "SELECT a.id, a.nama_laptop, " +
                "ROUND(EXP(LOG(a.harga) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 1) + " +
                "LOG(a.harga) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 2) + " +
                "LOG(a.ram) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 3) + " +
                "LOG(a.penyimpanan) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 4) + " +
                "LOG(a.layar) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 5) + " +
                "LOG(a.baterai) * (SELECT n.bobot FROM normalisasi n WHERE n.id = 6)), 3) AS score " +
                "FROM alternatif a;";

        // Koneksi ke database
        Connection kon = koneksi.koneksiDB();

        // Truncate tabel vektor
        String truncateSql = "TRUNCATE TABLE vektor";
        PreparedStatement truncatePst = kon.prepareStatement(truncateSql);
        truncatePst.executeUpdate();
        truncatePst.close();

        // Mengeksekusi query select
        PreparedStatement selectPst = kon.prepareStatement(sqlQuery);
        ResultSet rs = selectPst.executeQuery();

        // Membuat model untuk JTable
        DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "Nama Alternatif", "score"}, 0);

        // Query untuk memasukkan data ke vektor
        String insertSql = "INSERT INTO vektor (id, nama_laptop, score) VALUES (?, ?, ?)";
        PreparedStatement insertPst = kon.prepareStatement(insertSql);

        // Memproses hasil query dan memasukkannya ke model dan tabel vektor
        while (rs.next()) {
            int id = rs.getInt("id");
            String nama_laptop = rs.getString("nama_laptop");
            double bobot = rs.getDouble("score");

            // Tambahkan ke JTable model
            model.addRow(new Object[]{id, nama_laptop, bobot});

            // Masukkan ke tabel vektor
            insertPst.setInt(1, id);
            insertPst.setString(2, nama_laptop);
            insertPst.setDouble(3, bobot);
            insertPst.addBatch();
        }

        // Eksekusi batch insert
        insertPst.executeBatch();

        // Mengatur model ke JTable
        tblvektorS.setModel(model);

        // Tutup semua sumber daya
        rs.close();
        selectPst.close();
        insertPst.close();
        kon.close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}

    private void btnkembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnkembaliActionPerformed
        // TODO add your handling code here:
        mainapp i = new mainapp();
        i.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnkembaliActionPerformed
   
    private void txtbobotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtbobotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtbobotActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void totalbobot() {
        try {
            String sql = "SELECT SUM(bobot) AS total_bobot FROM kriteria";
            
            Connection kon =koneksi.koneksiDB();
            PreparedStatement pst = kon.prepareStatement(sql);
            
            ResultSet rs = pst.executeQuery();
            
            if (rs.next()) {
                int totalbobot = rs.getInt("total_bobot");
                
                txtbobot.setText(String.valueOf(totalbobot));
                
                rs.close();
                pst.close();
                kon.close();
            } 
        } catch(Exception e){
            JOptionPane.showMessageDialog(this,"Terjadi Kesalahan:"+e.getMessage(),"Error",JOptionPane.ERROR_MESSAGE);
    }
    }
    
   private void normalisasibobot() {
    Connection kon = null;
    PreparedStatement selectPst = null;
    PreparedStatement insertPst = null;
    ResultSet rs = null;
    try {
        String selectSql = "SELECT kode, " +
                "CASE " +
                "WHEN label = 'benefit' THEN bobot / (SELECT SUM(bobot) FROM kriteria) " +
                "WHEN label = 'cost' THEN -bobot / (SELECT SUM(bobot) FROM kriteria) " +
                "END AS normalisasi_bobot " +
                "FROM kriteria";
        
        kon = koneksi.koneksiDB();
        selectPst = kon.prepareStatement(selectSql);
        rs = selectPst.executeQuery();
        
        DefaultTableModel model = new DefaultTableModel(new String[]{"kode_kriteria", "bobot"}, 0);
        
        String insertSql = "INSERT INTO normalisasi (kode_kriteria, bobot) VALUES (?, ?)";
        insertPst = kon.prepareStatement(insertSql);

        // Memproses hasil query dan memasukkannya ke model dan tabel tblNormalisasi
        while (rs.next()) {
            String kodeKriteria = rs.getString("kode");
            double bobot = rs.getDouble("normalisasi_bobot");

            // Tambahkan ke JTable model
            model.addRow(new Object[]{kodeKriteria, bobot});

            // Masukkan ke tabel tblNormalisasi
            insertPst.setString(1, kodeKriteria);
            insertPst.setDouble(2, bobot);
            insertPst.addBatch();
        }

        // Eksekusi batch insert
        insertPst.executeBatch();

        // Mengatur model ke JTable
        tblnormalisasi.setModel(model);

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    } 
}
   
   




   
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(normalisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(normalisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(normalisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(normalisasi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new normalisasi().setVisible(true);
            }
        });
    }
    
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnkembali;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblnormalisasi;
    private javax.swing.JTable tblvektorS;
    private javax.swing.JTextField txtbobot;
    // End of variables declaration//GEN-END:variables

  
}
